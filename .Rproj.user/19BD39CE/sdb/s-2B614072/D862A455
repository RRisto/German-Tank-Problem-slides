{
    "contents" : "\nGerman Tank Problem Shiny app\n========================================================\nauthor: Risto\ndate: April 2015\n\nGerman Tank Problem app\n========================================================\n\nYou have to guess number of tanks produced size based on serial numbers of few tanks captured. All tanks have sequential serial number.\n\n- For example you have captured 5 tanks with serial numbers 73, 5, 83, 49, 25. What is actual tank production?\n\n- [Shiny application](https://ristohinno.shinyapps.io/GermanTankProblem/) provides and compares different solutions\n\n-[Github repository](https://github.com/RRisto/GermanTankProblem)\n\n![alt text](figures/tank.png)\n\nModels for simulation\n========================================================\n\n- Change number of **tanks captured**, actual tank **production range** and **margin** for model 2 and compare how good different models are:\n\n- **[Model 1](https://ristohinno.shinyapps.io/GermanTankProblem/)**, highest serial number captured = actual tank production\n\n- **[Model 2](https://ristohinno.shinyapps.io/GermanTankProblem/)**, model 1 answer +(model 1 answer * margin) = actual tank production\n\n- **[Model 3](https://ristohinno.shinyapps.io/GermanTankProblem/)**, formula originally used by allies: $$actual\\ tank\\ production = max + \\frac{max}{n} - 1$$ (max - maximum serial number captured; n - number of tanks captured)\n\nCompare different models (1)\n========================================================\n\nApp simulates 10 guesses per model for each tank in actual chosen prodcution range. Accuracy of models is assessed by residuals:\n\n - residuals (as % difference from actual production) summary:\n\n```{r, echo=FALSE}\nlibrary(reshape2)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\nset.seed(500)\nsimulation <- function(min=100, max=150, n=5, margin=5){\n    real=c()\n    third.guess=data.frame(NULL)\n    initial.guess=data.frame(NULL)\n    second.guess=data.frame(NULL)\n    resids1=data.frame(NULL)\n    resids2=data.frame(NULL)\n    resids3=data.frame(NULL)\n    #function for third guess\n    thirdModel = function(samp) {\n        max(samp) + max(samp)/length(samp) - 1\n    }\n    #simulation\n    x = seq(min, max, by=1)\n    minminus=min-1\n    for(i in x) {\n        trueTop = 1*i\n        real[i-minminus]=trueTop\n        for(j in 1:10) {\n            observeds = sample(1:trueTop, n)#every simulation we take\n            #randomly n samples\n            third.guess[i-minminus,j] = thirdModel(observeds)\n            initial.guess[i-minminus,j]=max(observeds)\n            second.guess[i-minminus,j]=max(observeds)*(1+(margin/100))\n            resids1[i-minminus,j] =initial.guess[i-minminus,j]-trueTop\n            resids2[i-minminus,j] =second.guess[i-minminus,j]-trueTop\n            resids3[i-minminus,j] =third.guess[i-minminus,j]-trueTop\n        }\n    }\n    #function for making data short, renaming levels\n    table=function(data, name){\n        data=data %>%\n            mutate( real=real) %>%\n            melt(id=\"real\") %>%\n            mutate(variable=name)\n        data\n    }\n    initial.guess=table(initial.guess, \"Model 1\")\n    second.guess=table(second.guess, \"Model 2\")\n    third.guess=table(third.guess, \"Model 3\")\n    resids1=table(resids1, \"resids1\")\n    resids2=table(resids2, \"resids2\")\n    resids3=table(resids3, \"resids3\")\n    #rbind tables\n    data.guess=rbind(initial.guess, second.guess, third.guess)\n    data.resids=rbind(resids1, resids2, resids3)\n    #add resids to initial table\n    data.guess$resids=data.resids$value\n    #calculate residulas as percent\n    data.guess=mutate(data.guess, resids.percent=(resids/real))\n    return(data.guess)\n}\nresids=function(data){\n    summary=data %>%\n        group_by(variable) %>%\n        summarise(Mean=mean(resids.percent*100),\n                  Median=median(resids.percent*100),\n                  Sd=sd(resids.percent*100))\n    names(summary)[1]=\"Model\"\n    as.data.frame(summary)\n}\n\nresids(simulation())\n```\n\n![alt text](figures/crushed2.png)\n\nCompare different models (2)\n========================================================\n\n - residuals histogram:\n \n```{r, echo=FALSE}\n        ggplot(simulation(), aes(x=resids.percent, colour=variable)) + \n            geom_density()+\n            geom_vline(xintercept = 0)+\n            scale_colour_discrete(name=\"Model\")+\n            scale_x_continuous(labels=percent)+\n            xlab(\"Residuals (% difference from real production)\")+\n            theme_minimal()   \n```\nHave a nice [tank hunt](https://ristohinno.shinyapps.io/GermanTankProblem/)!",
    "created" : 1427625100809.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2974352103",
    "id" : "D862A455",
    "lastKnownWriteTime" : 1427819177,
    "path" : "~/Minu asjad/Statistika, mudelid, excel/R/German Tank Problem slides/german_tank_problem/german tank problem.Rpres",
    "project_path" : "german_tank_problem/german tank problem.Rpres",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_presentation"
}